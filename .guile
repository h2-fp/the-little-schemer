(define atom?
	(lambda (x)
		(and (not (pair? x)) (not (null? x)))))

(define add1
	(lambda	(x)
		(+ x 1)))

(define sub1
	(lambda (x)
		(- x 1)))


(define x
	(lambda (n m)
		(cond
			((zero? m) 0)
			(else (+ n (x n (sub1 m)))))))

(define ^
	(lambda (n m)
		(cond
			((zero? m) 1)
			(else (x n (^ n (sub1 m)))))))


